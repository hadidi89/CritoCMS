@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    Layout = "LayoutWi.cshtml";
    var contactForm = new Crito.Models.ContactForm();
}

    <section class="contactinfo-section">
        <div class="container">
            <div class="infobox">
                <div class="black-circle"><i class="fa-regular fa-location-dot"></i></div><span>Visit us</span>
                <p>@Model.Value("contactInformationStreetName") @Model.Value("contactInformationPostalCode") @Model.Value("contactInformationCity")</p>
            </div>
            <div class="infobox">
                <div class="black-circle"><i class="fa-regular fa-phone"></i></div><span>Call us</span>
                <p>@Model.Value("contactInformationPhoneNumber1")@Model.Value("contactInformationPhoneNumber2")</p>
            </div>
            <div class="infobox">
                <div class="black-circle"><i class="fa-regular fa-envelope"></i></div><span>Email us</span>
                <p>@Model.Value("contactInformationEmail1") @Model.Value("contactInformationEmail2")</p>
            </div>
        </div>
    </section>
    
    <section class="contactform-section">
        <div class="container">
            <h2>Leave us a message for any information.</h2>


        @using (Html.BeginUmbracoForm("Index", "Contact", FormMethod.Post, new { @novalidate = "novalidate", id = "contact-form", onsubmit = "validateContactForm(event)" }))
        {
            <div asp-validation-summary="ModelOnly" class="text-danger ms-4 mb-5 no-bullets text-center"></div>
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="text-success mb-5 text-center" id="contact-form-success">@TempData["SuccessMessage"]</div>
            }
            @if (TempData["AlreadyRegisteredMessage"] != null)
            {
                <span class="text-danger mb-5 text-center" id="contact-form-already-registered">@TempData["AlreadyRegisteredMessage"]</span>
            }

            <input asp-for="@contactForm.Name" required type="text" placeholder="Name*" id="contact-name-input" onkeyup="errorMessageContactName(event)" class="mb-0">
            <span asp-validation-for="@contactForm.Name" class="text-danger" style="margin-left: -830px;"></span>

            <input asp-for="@contactForm.Email" required type="email" placeholder="Email*" id="contact-email-input" onkeyup="errorMessageContactEmail(event)" class="mb-0">
            <span asp-validation-for="@contactForm.Email" class="text-danger" style="margin-left: -830px;"></span>

            <textarea asp-for="@contactForm.Message" cols="30" rows="10" placeholder="Your Message*" id=" contact-message-input" onkeyup="errorMessageContactMessage(event)"></textarea>
            <span asp-validation-for="@contactForm.Message" class="text-danger" style="margin-left: -830px;"></span>

            <div class="grid">
                <button type="submit" class="btn-theme">Send Message <i class="fa-regular fa-arrow-up-right"></i></button>
            </div>
        }
        </div>
    </section>
    
    <section class="googlemaps-section">
        <div class="google-maps">
            <iframe src="@Model.Value("googleMapUrl")" width="100%" height="650" style="border:0;" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>
        </div>
    </section>

